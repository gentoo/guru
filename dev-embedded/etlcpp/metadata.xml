<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person">
    <name>Jan Henke</name>
    <email>gentoo@taujhe.de</email>
    <description>Primary maintainer</description>
</maintainer>
  <longdescription>
    C++ is a great language to use for embedded applications and templates are
    a powerful aspect. The standard library can offer a great deal of well
    tested functionality, but there are some parts of the standard library that
    do not fit well with deterministic behaviour and limited resource
    requirements. These limitations usually preclude the use of dynamically
    allocated memory and containers with open ended sizes.

    What is needed is a template library where the user can declare the size,
    or maximum size of any object upfront. Most embedded compilers do not
    currently support the standard beyond C++ 03, therefore excluding the
    programmer from	using the enhanced features of the later library.

    This is what the ETL attempts to achieve.
  </longdescription>
  <upstream>
    <remote-id type="github">ETLCPP/etl</remote-id>
  </upstream>
</pkgmetadata>

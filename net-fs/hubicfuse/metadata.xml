<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM 'https://www.gentoo.org/dtd/metadata.dtd'>
<pkgmetadata>
	<!-- maintainer-needed -->
	<longdescription lang="en">
		A FUSE application which provides access to hubiC's cloud files via a mount-point.

		This version contains support for DLO, symlinks and support to see other tenant's containers.
		Those features are coming from https://github.com/LabAdvComp/cloudfuse
		USAGE
		Your hubiC Cloud configuration can be placed in a file named $HOME/.hubicfuse. All the following variables are required:

		client_id=[hubiC client id for the registered application]
		client_secret=[hubiC client secret for the registered application]
		refresh_token=[A refresh token you got from the script]
		Optional variables:

		get_extended_metadata=[true/false, force download of additional file metadata like atime and mtime on first directory list]
		curl_verbose=[true/false, enable verbose output for curl HTTP requests]
		curl_progress_state=[true/false, enable verbose progress output for curl HTTP requests. Used for debugging.]
		cache_statfs_timeout=[value in seconds, large timeout increases the file access speed]
		debug_level=[0 default, 1 extremely verbose for debugging purposes]
		enable_chmod=[true/false, false by default, still experimental feature]
		enable_chown=[true/false, false by default, still experimental feature]
		client_id and client_secret can be retrieved from the hubiC web interface

		The refresh_token can be obtained running the script provided (hubic_token) or with any
		other method you like if you follow the example at https://api.hubic.com/

		Then you can call hubicfuse:

		sudo hubicfuse /mnt/hubic -o noauto_cache,sync_read,allow_other
		And finaly, it can be set in /etc/fstab:

		hubicfuse /mnt/hubic fuse user,noauto 0 0
		It also inherits a number of command-line arguments and mount options from the Fuse framework. 
		The "-h" argument should provide a summary.

		It is also possible to pass a custom hubicfuse settings file so that it is possible to mount multiple hubiC accounts:

		sudo hubicfuse /mnt/hubic1 -o noauto_cache,sync_read,allow_other,settings_filename=/root/hubic/account1.settings
		sudo hubicfuse /mnt/hubic2 -o noauto_cache,sync_read,allow_other,settings_filename=/root/hubic/account2.settings
		And finaly, in /etc/fstab :

		hubicfuse /mnt/hubic1 fuse user,noauto,settings_filename=/root/hubic/account1.settings 0 0
		hubicfuse /mnt/hubic2 fuse user,noauto,settings_filename=/root/hubic/account2.settings 0 0
	</longdescription>
	<upstream>
		<remote-id type="github">TurboGit/hubicfuse</remote-id>
	</upstream>
</pkgmetadata>
